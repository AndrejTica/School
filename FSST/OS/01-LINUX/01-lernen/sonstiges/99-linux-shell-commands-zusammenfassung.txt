# LINUX shell commands (by A.Hofmann)
---

## content
* Arbeiten mit der Shell
* Permission
* C,C++ Programme übersetzen


## Arbeiten mit der Shell
--------------------------------------------------------------------------------
* ls,cd,pwd,mkdir,rmdir,cp,mv,rm, more, cat, find

* Aufgabe: probieren Sie die folgenden Befehle

~~~
Filesystem und Befehle:

	ls
	ls -l
	ls -la

	pwd

	cd
	cd /home/informatik
	cd /etc
	cd .
	cd ..

	mkdir bla
	rmdir bla

	mkdir backup
	mkdir temp
	mkdir ws-javascripts
	mkdir ws-c
	mkdir ws-cpp
	mkdir ws-java
	mkdir ws-python

	cd
	cp /etc/passwd temp

	cd temp
	cp passwd passwd-copied

	cd
	mv temp backup

	cat /etc/passwd
	more /etc/passwd
		space, enter, f, b, q

	find / -name "passwd"
	
	
~~~

## Permission
--------------------------------------------------------------------------------
* id, ls -l, /etc/passwd, /etc/group, chmod, chown

* Aufgabe: probieren Sie die folgenden Befehle
~~~
	id
	cd
	touch bla.txt
	ls -l
	chmod g+w bla.txt
	ls -l
	chmod o+w bla.txt
	ls -l
	chmod 644 bla.txt
	ls -l
	chmod 755 bla.txt
	rm bla.txt

	cp /etc/passwd .
	ls -l
	
	
	
	sudo chown root passwd
	ls -l 
	sudo chown root:root passwd
	ls -l
	sudo rm passwd

	rm bla.txt
~~~


## Editor
------------------------------------------------------------------------------
- nano


## C,C++ Programme übersetzen

### übersetzen und linken und starten
---------------------------------
~~~
gcc prog.c -o prog.exe
./prog.exe

g++ prog.cpp -o prog.exe
./prog.exe
~~~


### nur übersetzen nicht linken
---------------------------
~~~
gcc -c prog.c
~~~


### Mathematik LIB einbinden
-------------------------
~~~
gcc prog.c -o prog.exe -lm
~~~



### Makefile verwenden
------------------
* http://www.ijon.de/comp/tutorials/makefile.html

~~~
#Inhalt der Datei Makefile		
all:
	gcc prog.c -o prog.exe
	
run:
	./prog.exe
clean:
	rm prog.exe
~~~
	

* Aufruf: 
~~~
make
make run	
~~~
	
* Auch das ist wichtig:
~~~
# Wenn das Programm aus mehreren c-Dateien
#			oder h-Dateien besteht:
#			Änderungen von prog.c und prog.h sollten 
#			dann ein autom. Übersetzen bewirken:
#			Achtung:
#			Eine gemeine Falle für Anfänger ist, daß die 
#			zweite Zeile mit einem <tab> anfangen muß, und 
#			nicht mit Leerzeichen.
#			
#
#Inhalt der Datei Makefile		
prog: prog.c prog.h 
	gcc prog.c -o prog.exe
run:
	./prog.exe

clean:
	rm prog.exe
~~~
	
		
* Aufruf: 
~~~
make prog
make run	
~~~
	

* Wenn man viele c-/h-Dateien hat kann man folg. verwenden

~~~
#Inhalt der Datei Makefile
OBJ = datei1.o datei2.o datei3.o datei4.o datei5.o

prog: $(OBJ)
	gcc prog.c -o prog.exe $(OBJ)

%.o: %.c %.h
	gcc -c $<

run:
	./prog.exe
clean:
	rm *.exe
	rm *.o		
~~~

* Aufruf: 
~~~
make prog
make run
make clean
~~~
