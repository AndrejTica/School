* C,C++ Programme übersetzen

** übersetzen und linken und starten
#+BEGIN_SRC bash
gcc prog.c -o prog.exe
./prog.exe

g++ prog.cpp -o prog.exe
./prog.exe
#+END_SRC


** nur übersetzen nicht linken
#+BEGIN_SRC bash
gcc -c prog.c
#+END_SRC


** Mathematik LIB einbinden
#+BEGIN_SRC bash
gcc prog.c -o prog.exe -lm
#+END_SRC



* Makefile verwenden
- [[http://www.ijon.de/comp/tutorials/makefile.html][Makefile]] 

- Inhalt der Datei *Makefile*
#+BEGIN_EXAMPLE 
all:
	gcc prog.c -o prog.exe	
run:
	./prog.exe
clean:
	rm prog.exe
#+END_EXAMPLE
	

** Aufruf: 
#+BEGIN_SRC bash
make
make run	
#+END_SRC

	
* Auch das ist wichtig:
~~~
#+BEGIN_SRC bash
# Wenn das Programm aus mehreren c-Dateien
#			oder h-Dateien besteht:
#			Änderungen von prog.c und prog.h sollten 
#			dann ein autom. Übersetzen bewirken:
#			Achtung:
#			Eine gemeine Falle für Anfänger ist, daß die 
#			zweite Zeile mit einem <tab> anfangen muß, und 
#			nicht mit Leerzeichen.
#			
#
#Inhalt der Datei Makefile		
prog: prog.c prog.h 
	gcc prog.c -o prog.exe
run:
	./prog.exe

clean:
	rm prog.exe
#+END_SRC
	
		
** Aufruf: 
#+BEGIN_SRC bash
make prog
make run	
#+END_SRC
	

* Wenn man viele c-/h-Dateien hat kann man folg. verwenden

- Inhalt der Datei Makefile
#+BEGIN_SRC bash
OBJ = datei1.o datei2.o datei3.o datei4.o datei5.o

prog: $(OBJ)
	gcc prog.c -o prog.exe $(OBJ)

%.o: %.c %.h
	gcc -c $<

run:
	./prog.exe
clean:
	rm *.exe
	rm *.o		
#+END_SRC


** Aufruf: 
#+BEGIN_SRC bash
make prog
make run	
make clean
#+END_SRC
