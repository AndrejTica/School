/**
 *
1.2.  Aufgabe: Hangman
Realisieren Sie das bekannte Wortratespiel auf dem Computer. Zeigen Sie zunächst von einem zu ratenden Wort für die einzelnen Zeichen jeweils nur Striche an. 
Anschließend fragen Sie nach Buchstaben. Sollten die Buchstaben im zu ratenden Wort vorkommen, so werden die entsprechenden Positionen aufgedeckt, d.h. an dieser Stelle
werden die tatsächlichen Zeichen angezeigt. Durch Eingabe eines Zeichens (z.B. '#' – welches dann in keinem Wort vorkommen darf) kann das Raten abgebrochen werden und die Eingabe des vollständigen Worts ist nun möglich. Stimmt das eingegebene Wort mit dem verdeckten Wort überein, ist das Spiel zu Ende, ansonsten wird wieder in den obigen Buchstabenratemodus zurückgekehrt.

Beispiel: Zu ratendes Wort: "Hangman" (verdeckt)
- - - - - - - 	Eingabe (a)
- a - - - a - 	Eingabe (g)
- a - g - a - 	Eingabe (e)
- a - g - a - 	Eingabe (n)
- a n g - a n 	Eingabe (#) ~ Ende Buchstabenraten

Eingabe: Hangman →  richtig geraten / bzw. Zurückkehren zum Buchstabenraten

Hinweis: 
Sie können das Spiel abwechslungsreicher gestalten, wenn Sie sich eine Tabelle von zu ratenden Wörtern im Programm anlegen und aus dieser Tabelle zufällig einen Eintrag auswählen, anstatt diesen vorher einzugeben.

=========
1. ANALYSE (WAS)
2. ENTWURF (WIE)
	2.1. Grobentwurf (Module, Datenstrukturen; Aufteilung auf Personen)
	2.2. Feinentwurf (Klassen/Methoden/Funktionen)
3. IMPLEMENTIERUNG
	3.1. Grobgerüst ('leere' Funktionen)
	3.2. Feinimplementierung ('fertige' Funktionen)
4. TESTS
5. ABNAHME
==========
*/

/* 
 * 
 * 
Hangman: Klassen ...
class Hangmann:
	private String word2show; //    -E--O
	private String word2guess; // HELLO

public
	void newGame(void);
	
	String getWord2show();
	String getWord2guess();
	int getBadTries();
	int getMaxTries();
	
	int tryChar(char ch);
	int tryWord(word);

	int success();
	int gameOver();

 */

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class SwingHangman extends JFrame {

	private JPanel contentPane;
	private JPanel panel_bild;
	private JPanel panel_Tastatur;
	private JPanel panel_wort;
	
	
	private JButton[][] tastatur= new JButton[13][2]; // 13 xn 2 yn

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					SwingHangman frame = new SwingHangman();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public SwingHangman() {
		setTitle("SwingHangman (2018 AHofmann)");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 703, 463);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		contentPane.add(getPanel_bild());
		contentPane.add(getPanel_Tastatur());
		contentPane.add(getPanel_wort());
		
		// Tastatur
		char ch='A';
		for (int y = 0; y < 2; y++) {
			for (int x = 0; x < 13; x++) {
					tastatur[x][y]= new JButton(String.valueOf(ch));
					tastatur[x][y].setBounds(x * 30, y*30, 30, 30);
					tastatur[x][y].addActionListener(new ActionListener() {
						
						@Override
						public void actionPerformed(ActionEvent e) {
							JButton btn= (JButton) e.getSource();
							
							btn.setEnabled(false);
							String sCode= btn.getText();
							char tryChar= sCode.charAt(0);
							System.out.println(tryChar);
							
						}
					});
					
					getPanel_Tastatur().add(tastatur[x][y]);
					
					ch ++;
			}
		}
	}
		
	private JPanel getPanel_bild() {
		if (panel_bild == null) {
			panel_bild = new JPanel();
			panel_bild.setBounds(318, 224, 365, 194);
		}
		return panel_bild;
	}
	private JPanel getPanel_Tastatur() {
		if (panel_Tastatur == null) {
			panel_Tastatur = new JPanel();
			panel_Tastatur.setBounds(12, 12, 671, 120);
		}
		return panel_Tastatur;
	}
	private JPanel getPanel_wort() {
		if (panel_wort == null) {
			panel_wort = new JPanel();
			panel_wort.setBounds(12, 154, 671, 46);
		}
		return panel_wort;
	}
}
 
