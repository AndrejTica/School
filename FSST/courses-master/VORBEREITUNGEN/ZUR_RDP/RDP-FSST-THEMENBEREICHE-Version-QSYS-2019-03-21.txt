# RDP-FSST-VORBEREITUNG / RDP THEMENBEREICHE
---
author: Anton Hofmann/HTL Salzburg/Elektronik  
date: 2018.03.15
date: 2019.03.21
state: not ready
to: MaturantInnen


Hier finden Sie Themen und Beispielfragen zur RDP Vorbereitung. Es handelt sich um 
einen Auszug und **KEINE vollständige Abdeckung des Lernstoffes**.

Zur vollständigen Vorbereitung nutzen Sie Ihre im Unterricht verwendeten Unterlagen
und die gesamten Daten auf diesem Service. <https://gitlab.com/4me/courses>.
Zur RDP kommt ausschließlich der im Unterricht behandelte Stoff. 


BEACHTEN SIE, DASS manche Stoffgebiete MEHREREN RDP-THEMENBEREICHEN ZUGEORDNET SEIN KÖNNEN.

Ich wünsche Ihnen viel Erfolg.



## 1. **Betriebssysteme / Fachspezifische Software**  (RDP-FSST-OS-SW)
---
	* OS: Begriffe,Aufbau,Aufgaben, ...
	* OS-Java/Cpp: Thread,Synchronisation, Semaphore, Lost Update, Critical Section,...
	* OS-Posix: Signale,fork,execlp, pipe, Fifo, pthreads 
	* OS: Permission(Linux/Windows): User/Gruppen,Filestruktur,Prozesse, Shell-Befehle,...
	* OS: Virtualisierung
	* +OS: Treiberprogrammierung
	
	* DS-ALGO: Rekursion, Suchen,Sortieren,Backtracking
	* DS-ALGO: C/CPP-Dynamische Datenstrukturen: Stack, Fifo, Listen, Bäume, STL, ...
				
				
	
## 2. **Datenbanken** (RDP-FSST-DB)
---
	* DB: ERD, ... 
	* DB: RM: Keys,referentielle Integrität,Constraints, ...
	* DB: SQL: DDL,DML,Aggregatfunktionen,Index 
	* DB: SQL: Views, +Trigger, +Stored Proc
	* DB: Normalformen: Anomalien, Funktionale Abhängigkeiten, 1.-3. Normalform, ...
	* DB-APP: odbc,jdbc, php, ...
	* DB-SEC: sql-injection, SQL-DCL (grant,...), ...
	* +DB: Datawarehouse

	
## 3. **Programmiersprachen** (RDP-FSST-PROG)
---
	* JAVA,C,CPP
	* OOP1: Klasse,Objekt,Sichtbarkeit,...
	* OOP2: Aggregation/Assoziation,
	* OOP3: Vererbung,virtual,abstract, ...
	* JAVA: Interface: Observer,Runnable,Comparable,...
	* C-Speicherklassen: Sichtbarkeiten, Lebensdauer, (global/lokal static)
	* C-Zeiger: Datenzeiger, Funktionszeiger, Sicheres Programmieren (Buffer Overflow,...), ...
	* C-Wiederverwendbare Module in C: Stack,Fifo, ...
	* Finde Fehler im Programm, Exceptionhandling, ...
	* CPP: c2cpp: Default Argumente, Function Overloading, Referenzen, ...
	* CPP: Speicherverwaltung (new,delete), 
	* CPP: Überladen v. Operatoren, 
	* CPP: Templates, STL, ...
	* CPP11: Modern CPP coding: auto, move, shared pointer, lambda-expr, for, ...
	
	* DS-ALGO: Rekursion, Suchen,Sortieren,Backtracking
	* DS-ALGO: C/CPP-Dynamische Datenstrukturen: Stack, Fifo, Listen, Bäume, STL, ...

	
## 4. **Softwareentwicklung** (RDP-FSST-SWE)
---
	* SENG: Phasenmodelle, Dokumente (Pflichtenheft, ...) , ...
	* SENG-Agile Methoden: Scrum, ...
	* SENG-UML: Klassendiagramme, Zustandsdiagramme, ...
	* SENG-Design Pattern: Singleton, Observer, MVC, ...

	* SENG-UML: 
	* SENG-Formale Sprachen: Determin. endl. Automaten (FSM), EBNF, REGEX, ...
	
	* SENG-Testen: Definitionen, TDD, Junit, Code-coverage, ... 
	* SENG: Versionsverwaltung, git, ...
	
	* FS: Spez. Algorithmen (Traveling Salesman, Dijkstra-Shortest Path, A*, Evol. Algorithmen, 
				Topologisches Sortieren, Hochzeitsproblem, ...)
	
	* DS-ALGO: Rekursion, Suchen,Sortieren,Backtracking
	* DS-ALGO: C/CPP-Dynamische Datenstrukturen: Stack, Fifo, Listen, Bäume, STL, ...

	
## 5. **Web- und Netzwerkprogrammierung / Datensicherheit** (RDP-FSST-NET)
---
	* WEB-NW-PROG: Netzwerk-Grundlagen: OSI,IP,TCP/UDP, Adressierung, DNS, http, ...
	* WEB-NW-PROG: Socket-API (c,c++,java): portscanner, ...
	* WEB-NW-PROG: html,css,js,php, ...
	* +WEB-NW-PROG: Webservices, REST, Websocket, ...
	* SEC: Diffie-Hellman
	* SEC-KRYPTO: (Verbindlichkeit, Vertraulichkeit, Authentisierung, MAC, Krypto-hash-Funktionen, sha512, ...)
	* SEC: SSL, Zertifikate, ...
	* SEC: RSA, SHA, AES, openPGP, ...
	* WEB-SEC: sql-injection, cross-site-scripting, ... (s. DVWA)
  * Datenkompression (huffman,mpeg,jpg, ..., tabellenbasiert)	
